FROM node:22-alpine AS base

RUN apk add --no-cache libc6-compat && \
    npm install -g pnpm

WORKDIR /app

FROM base AS builder
# Copy workspace files
COPY pnpm-workspace.yaml package.json pnpm-lock.yaml .prettierrc .prettierignore eslint.config.mjs ./
COPY packages/ ./packages/
COPY apps/www/ ./apps/www/

# Install and build
RUN pnpm install --frozen-lockfile && \
    pnpm --filter "./packages/*" build && \
    pnpm --filter www build

# Ultra-minimal production image
FROM node:22-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy ONLY what's needed for standalone
COPY --from=builder --chown=nextjs:nodejs /app/apps/www/.next/standalone/ ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/www/.next/static ./apps/www/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/apps/www/public ./apps/www/public

USER nextjs

EXPOSE 3000
ENV PORT=3000 HOSTNAME="0.0.0.0" API_BASE_URL="http://localhost:8080"

CMD ["node", "apps/www/server.js"]